/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibraryManagementPakage;

import com.mysql.jdbc.PreparedStatement;
//import com.sun.imageio.plugins.png.RowFilter;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
//import java.util.regex.*;
import javax.swing.RowFilter;

/**
 *
 * @author rakibul
 */
public class IssueBook extends javax.swing.JFrame {

    /**
     * Creates new form Book
     */
    public IssueBook() {
        initComponents();
        connect();
       
        Book_Load();
       // publisherLoad();
        SelecMem.setSelectedIndex(-1);
        //BookBox.setSelectedIndex(-1);
        clearAll();
    }
    
    
    Connection con ;
    PreparedStatement pst , issue , update ;
    int id ;
    String MemberInput;
    
    public void connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/library","root","");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LibrarianLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(LibrarianLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void clearAll(){
        IdBox.removeAllItems();
        BookBox.removeAllItems();
        
       
      
        
    }
    
    
    public void Books(){
        try {
            MemberInput = SelecMem.getSelectedItem().toString();
            pst = (PreparedStatement) con.prepareStatement("SELECT id FROM StudentBooks where rec=?");
            pst.setString(1, MemberInput );
            ResultSet rs = pst.executeQuery();
            BookBox.removeAllItems();
            while (rs.next()) {
                
                String itemString = String.valueOf(rs.getInt("id"));
                
                BookBox.addItem(itemString);
                
                
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Category.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    

    
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        issueBtn = new javax.swing.JButton();
        BookBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        IdBox = new javax.swing.JComboBox<>();
        SelecMem = new javax.swing.JComboBox<>();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("C059", 1, 18)); // NOI18N
        jLabel1.setText("IIUC Library");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 20, 132, 29));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 62, -1, -1));

        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });
        getContentPane().add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 61, 400, -1));

        BookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Member", "Member ID", "Book ID", "Issue Date", "Return Date"
            }
        ));
        BookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BookTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 90, 540, 240));

        jPanel1.setBackground(new java.awt.Color(150, 93, 93));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Manage Books", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel3.setText("Member");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 37, -1, -1));

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel4.setText("Books");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        issueBtn.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        issueBtn.setText("Issue");
        issueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBtnActionPerformed(evt);
            }
        });
        jPanel1.add(issueBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 88, -1));

        BookBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                BookBoxItemStateChanged(evt);
            }
        });
        jPanel1.add(BookBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(91, 123, 160, -1));

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        jLabel8.setText("ID");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 77, -1, 28));

        jPanel1.add(IdBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 82, 160, -1));

        SelecMem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teacher", "Student" }));
        SelecMem.setSelectedIndex(-1);
        SelecMem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SelecMemItemStateChanged(evt);
            }
        });
        SelecMem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SelecMemMousePressed(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelecMemMouseClicked(evt);
            }
        });
        SelecMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecMemActionPerformed(evt);
            }
        });
        jPanel1.add(SelecMem, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 36, 160, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 300, 270));

        backBtn.setIcon(new javax.swing.ImageIcon("/home/rakibul/Documents/LibraryManagement/backIcon.png")); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, 63, -1));

        setSize(new java.awt.Dimension(900, 395));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void issueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBtnActionPerformed
        // TODO add your handling code here:
        String member , memberID , BookIdString , issueBook , retBook;
        int copies , BookID;
        member = SelecMem.getSelectedItem().toString();
        memberID = IdBox.getSelectedItem().toString();
        BookIdString = BookBox.getSelectedItem().toString();
        issueBook = LocalDate.now().toString();
        retBook = LocalDate.now().plusMonths(1).toString();
        
        try {
            issue = (PreparedStatement) con.prepareStatement("insert into issueBook(member, memberID, BookID, iDate, rDate) values (?,?,?,?,?)");
            issue.setString(1, member);
            issue.setString(2, memberID);
            issue.setString(3, BookIdString);
            issue.setString(4, issueBook);
            issue.setString(5, retBook);
            int k = issue.executeUpdate();
            if(k == 1){
                JOptionPane.showMessageDialog(this, "Book Issued");
                RemoveCopy();
                Book_Load();
                SelecMem.setSelectedIndex(-1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_issueBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        new MainUserInterface().setVisible(true);
        this.setVisible(false);
        clearAll();
    }//GEN-LAST:event_backBtnActionPerformed

    private void BookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookTableMouseClicked
        // TODO add your handling code here:
     int cpys;
     DefaultTableModel d=  (DefaultTableModel)BookTable.getModel();
     int selectedindex = BookTable.getSelectedRow();
     if(BookTable.getRowSorter()!= null){
         selectedindex = BookTable.getRowSorter().convertRowIndexToModel(selectedindex);
     }
       id = Integer.parseInt(d.getValueAt(selectedindex, 0).toString());
//     titleTxt.setText(d.getValueAt(selectedindex, 1).toString());
//     IdBox.setSelectedItem(d.getValueAt(selectedindex,2).toString());
//     BookBox.setSelectedItem(d.getValueAt(selectedindex, 3).toString());
//     PubBox.setSelectedItem(d.getValueAt(selectedindex, 4).toString());
//     cpys = Integer.parseInt(d.getValueAt(selectedindex, 5).toString());
//     copiesTxt.setValue(cpys);
//     SelectFor.setSelectedItem(d.getValueAt(selectedindex, 6).toString());
    
     
     
    }//GEN-LAST:event_BookTableMouseClicked

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) BookTable.getModel();
        String search = searchTxt.getText();
        TableRowSorter<DefaultTableModel>tr = new TableRowSorter<DefaultTableModel>(table);
        BookTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_searchTxtKeyReleased

    private void SelecMemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SelecMemItemStateChanged
        // TODO add your handling code here:
        if(SelecMem.getSelectedIndex()== -1)
            clearAll();
        else{
        MemberInput = SelecMem.getSelectedItem().toString();
        IdBox.removeAllItems();
        IDLoad(MemberInput);
            Books();
        }
        
    }//GEN-LAST:event_SelecMemItemStateChanged

    private void SelecMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecMemActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_SelecMemActionPerformed

    private void SelecMemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelecMemMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_SelecMemMouseClicked

    private void SelecMemMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelecMemMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_SelecMemMousePressed

    private void BookBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_BookBoxItemStateChanged
      
            
            

       
    }//GEN-LAST:event_BookBoxItemStateChanged

    public void IDLoad(String MemberString){
        
         try {
            if(MemberString.equals("Student")){
            pst = (PreparedStatement) con.prepareStatement("SELECT studentID FROM student");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                
                String CatItem = rs.getString("studentID");
                
                IdBox.addItem(CatItem);
                
                
                
            }
            }
            else if(MemberString.equals("Teacher")){
                pst = (PreparedStatement) con.prepareStatement("SELECT teacherID FROM teacher");
                ResultSet rs = pst.executeQuery();
                while (rs.next()) {
                
                String CatItem = rs.getString("teacherID");
                
                IdBox.addItem(CatItem);
                
                
                
            }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Category.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }
    
    public void Book_Load(){
        
        try {
            pst = (PreparedStatement) con.prepareStatement("SELECT * FROM issueBook");
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            DefaultTableModel df = (DefaultTableModel) BookTable.getModel();
            df.setRowCount(0);
            while (rs.next()) {   
                
                String id = String.valueOf(rs.getInt("id"));
                String membersString = rs.getString("member");
                String memberidString = rs.getString("memberID");
                String bookidString = rs.getString("BookID");
                String idateString = rs.getString("iDate");
                String rdateString = rs.getString("rDate");
                
                
                String tbData[] = {id,membersString,memberidString,bookidString,idateString,rdateString};
                df.addRow(tbData);
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Category.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    public void RemoveCopy(){
        
        String bookString = BookBox.getSelectedItem().toString();
        try {
            update = (PreparedStatement) con.prepareStatement("update StudentBooks set copies = copies - 1 where id=?");
            update.setString(1, bookString);
            int l = update.executeUpdate();
            if(l == 1){
                System.out.println("updated");
            }
        } catch (SQLException ex) {
            Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BookBox;
    private javax.swing.JTable BookTable;
    private javax.swing.JComboBox<String> IdBox;
    private javax.swing.JComboBox<String> SelecMem;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton issueBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchTxt;
    // End of variables declaration//GEN-END:variables
}
